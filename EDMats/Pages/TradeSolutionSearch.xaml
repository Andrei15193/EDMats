<UserControl x:Class="EDMats.Pages.TradeSolutionSearch"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:EDMats.Pages.Converters"
             xmlns:controls="clr-namespace:EDMats.Pages.Controls"
             xmlns:viewModels="clr-namespace:EDMats.ViewModels"
             xmlns:engineering="clr-namespace:EDMats.Models.Engineering"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d"
             d:DesignHeight="450"
             d:DesignWidth="800">
    <UserControl.DataContext>
        <viewModels:SolutionSearchViewModel x:Name="ViewModel" />
    </UserControl.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="{Binding SelectedModule, Converter={converters:GridLengthNullConverter}, Mode=OneWay}" />
            <RowDefinition Height="{Binding SelectedBlueprint, Converter={converters:GridLengthNullConverter}, Mode=OneWay}" />
            <RowDefinition Height="{Binding SelectedExperimentalEffect, Converter={converters:GridLengthNullConverter}, Mode=OneWay}" />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0">
            <ToggleButton Checked="_BeginTradeSolutionSearch"
                          Unchecked="_EndTradeSolutionSearch"
                          Padding="10"
                          FontSize="15"
                          Content="Watch Journal File">
            </ToggleButton>

            <TextBlock Margin="0, 2, 0, 0"
                       TextAlignment="Center"
                       FontSize="14"
                       Text="Trade solutions"
                       TextDecorations="Underline" />
            <TextBlock TextAlignment="Center">
                <TextBlock.Resources>
                    <converters:TradeSolutionBrushConverter x:Key="TradeSolutionBrushConverter"
                                                            NoTradeSolutionBrush="Red"
                                                            EmptyTradeSolutionBrush="Green"
                                                            TradeSolutionBrush="Blue" />
                    <converters:TradeSolutionViewAvailableConverter x:Key="HyperlinkTradeSolutionEnabledConverter" />
                    <converters:TradeSolutionTextDecorationsConverter x:Key="HyperlinkTradeSolutionTextDecorationConverter"
                                                                      TradeSolutionTextDecoration="Underline" />
                </TextBlock.Resources>
                    <Hyperlink DataContext="{Binding RawMaterialsTradeSolution, Mode=OneWay}"
                               Foreground="{Binding Mode=OneWay, Converter={StaticResource TradeSolutionBrushConverter}}"
                               IsEnabled="{Binding Mode=OneWay, Converter={StaticResource HyperlinkTradeSolutionEnabledConverter}}"
                               TextDecorations="{Binding Mode=OneWay, Converter={StaticResource HyperlinkTradeSolutionTextDecorationConverter}}"
                               Click="_ShowTradeSolution">Raw</Hyperlink>
                    <Run Text="|" />
                    <Hyperlink DataContext="{Binding EncodedMaterialsTradeSolution, Mode=OneWay}"
                               Foreground="{Binding Mode=OneWay, Converter={StaticResource TradeSolutionBrushConverter}}"
                               IsEnabled="{Binding Mode=OneWay, Converter={StaticResource HyperlinkTradeSolutionEnabledConverter}}"
                               TextDecorations="{Binding Mode=OneWay, Converter={StaticResource HyperlinkTradeSolutionTextDecorationConverter}}"
                               Click="_ShowTradeSolution">Encoded</Hyperlink>
                    <Run Text="|" />
                    <Hyperlink DataContext="{Binding ManufacturedMaterialsTradeSolution, Mode=OneWay}"
                               Foreground="{Binding Mode=OneWay, Converter={StaticResource TradeSolutionBrushConverter}}"
                               IsEnabled="{Binding Mode=OneWay, Converter={StaticResource HyperlinkTradeSolutionEnabledConverter}}"
                               TextDecorations="{Binding Mode=OneWay, Converter={StaticResource HyperlinkTradeSolutionTextDecorationConverter}}"
                               Click="_ShowTradeSolution">Manufactured</Hyperlink>
            </TextBlock>
        </StackPanel>

        <Grid Grid.Row="1"
              Grid.RowSpan="{Binding SelectedModule, ConverterParameter={x:Null}, Converter={converters:EqualsConverter ValueWhenEqual=3, ValueWhenNotEqual=1}, Mode=OneWay}"
              Margin="0, 6, 0, 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>

            <Border Grid.Row="0"
                    BorderBrush="Black"
                    BorderThickness="0, 0, 0, 1">
                <TextBlock Text="Modules" />
            </Border>
            <controls:ItemSelector Grid.Row="1"
                                   Margin="0, 6, 0, 0"
                                   ItemsSource="{x:Static engineering:Module.All}"
                                   SelectedItem="{Binding SelectedModule, Mode=TwoWay}"
                                   FilterPropertysNames="Name,Id">
                <controls:ItemSelector.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name, Mode=OneTime}" />
                    </DataTemplate>
                </controls:ItemSelector.ItemTemplate>
            </controls:ItemSelector>
        </Grid>

        <Grid Grid.Row="2"
              Grid.RowSpan="{Binding SelectedModule.ExperimentalEffects.Count, ConverterParameter=0, Converter={converters:EqualsConverter ValueWhenEqual=2, ValueWhenNotEqual=1}, Mode=OneWay}"
              Margin="0, 6, 0, 0"
              Visibility="{Binding SelectedModule, Mode=OneWay, ConverterParameter={x:Null}, Converter={converters:EqualsConverter ValueWhenEqual={x:Static Visibility.Collapsed}, ValueWhenNotEqual={x:Static Visibility.Visible}}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="{Binding SelectedBlueprint, Converter={converters:GridLengthNullConverter}, Mode=OneWay}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Border Grid.Row="0"
                    BorderBrush="Black"
                    BorderThickness="0, 0, 0, 1">
                <TextBlock Text="Blueprints" />
            </Border>

            <controls:ItemSelector Grid.Row="1"
                                   Margin="0, 6, 0, 0"
                                   ItemsSource="{Binding SelectedModule.Blueprints, Mode=OneWay}"
                                   SelectedItem="{Binding SelectedBlueprint, Mode=TwoWay}"
                                   FilterPropertysNames="Name,Id">
                <controls:ItemSelector.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name, Mode=OneTime}" />
                    </DataTemplate>
                </controls:ItemSelector.ItemTemplate>
            </controls:ItemSelector>

            <StackPanel Grid.Row="2"
                        Margin="0, 6, 0, 0"
                        Visibility="{Binding SelectedBlueprint, Mode=OneWay, ConverterParameter={x:Null}, Converter={converters:EqualsConverter ValueWhenEqual={x:Static Visibility.Collapsed}, ValueWhenNotEqual={x:Static Visibility.Visible}}}">
                <Border BorderBrush="Black"
                        BorderThickness="0, 0, 0, 1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="70" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0"
                                   Text="Requirements" />
                        <TextBlock Grid.Column="1"
                                   Text="Repetitions" />
                    </Grid>
                </Border>
                <ItemsControl ItemsSource="{Binding BlueprintGradeRequirements, Mode=OneWay}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Grid Margin="0, 2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="70" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0"
                                            Orientation="Horizontal"
                                            DataContext="{Binding GradeRequirements, Mode=OneTime}">
                                    <TextBlock>
                                        <Run Text="{Binding Grade, Mode=OneTime}" /><Run Text=": " />
                                    </TextBlock>
                                    <controls:MaterialRequirements Requirements="{Binding Requirements, Mode=OneTime}" />
                                </StackPanel>
                                <TextBox Grid.Column="1"
                                         TextAlignment="Right"
                                         InputScope="Number"
                                         MinWidth="10"
                                         VerticalAlignment="Center"
                                         HorizontalAlignment="Stretch"
                                         PreviewTextInput="_PreviewRepetitionInput"
                                         Text="{Binding Repetitions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </Grid>

        <Border Grid.Row="3"
                Margin="0, 6, 0, 0"
                Visibility="{Binding SelectedModule.ExperimentalEffects.Count, Mode=OneWay, ConverterParameter=0, Converter={converters:EqualsConverter ValueWhenEqual={x:Static Visibility.Collapsed}, ValueWhenNotEqual={x:Static Visibility.Visible}}}">
            <Grid Visibility="{Binding SelectedModule, Mode=OneWay, ConverterParameter={x:Null}, Converter={converters:EqualsConverter ValueWhenEqual={x:Static Visibility.Collapsed}, ValueWhenNotEqual={x:Static Visibility.Visible}}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="{Binding SelectedExperimentalEffect, Converter={converters:GridLengthNullConverter}, Mode=OneWay}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border Grid.Row="0"
                        BorderBrush="Black"
                        BorderThickness="0, 0, 0, 1">
                    <TextBlock Text="Experimental Effects" />
                </Border>

                <controls:ItemSelector Grid.Row="1"
                                       Margin="0, 6, 0, 0"
                                       ItemsSource="{Binding SelectedModule.ExperimentalEffects, Mode=OneWay}"
                                       SelectedItem="{Binding SelectedExperimentalEffect, Mode=TwoWay}"
                                       FilterPropertysNames="Name,Id"
                                       Visibility="{Binding SelectedModule, Mode=OneWay, ConverterParameter={x:Null}, Converter={converters:EqualsConverter ValueWhenEqual={x:Static Visibility.Collapsed}, ValueWhenNotEqual={x:Static Visibility.Visible}}}">
                    <controls:ItemSelector.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name, Mode=OneTime}" />
                        </DataTemplate>
                    </controls:ItemSelector.ItemTemplate>
                </controls:ItemSelector>

                <StackPanel Grid.Row="2"
                            Margin="0, 6, 0, 0"
                            Visibility="{Binding SelectedExperimentalEffect, Mode=OneWay, ConverterParameter={x:Null}, Converter={converters:EqualsConverter ValueWhenEqual={x:Static Visibility.Collapsed}, ValueWhenNotEqual={x:Static Visibility.Visible}}}">
                    <Border BorderBrush="Black"
                            BorderThickness="0, 0, 0, 1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="70" />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0"
                                       Text="Requirements" />
                            <TextBlock Grid.Column="1"
                                       Text="Repetitions" />
                        </Grid>
                    </Border>

                    <Grid Margin="0, 2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="70" />
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0"
                                    Orientation="Horizontal"
                                    DataContext="{Binding SelectedExperimentalEffect, Mode=OneWay}">
                            <controls:MaterialRequirements Requirements="{Binding Requirements, Mode=OneTime}" />
                        </StackPanel>

                        <TextBox Grid.Column="1"
                                 TextAlignment="Right"
                                 InputScope="Number"
                                 MinWidth="10"
                                 VerticalAlignment="Center"
                                 HorizontalAlignment="Stretch"
                                 PreviewTextInput="_PreviewRepetitionInput"
                                 Text="{Binding ExperimentalEffectRepetitions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </Grid>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>